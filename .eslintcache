[{"/Users/spartan/Documents/GitHub/teamzone-frontend/src/index.js":"1","/Users/spartan/Documents/GitHub/teamzone-frontend/src/App.js":"2","/Users/spartan/Documents/GitHub/teamzone-frontend/src/reducers/index.js":"3","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/Auth.js":"4","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Home/Home.js":"5","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Navbar/Navbar.js":"6","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/PostDetails/PostDetails.jsx":"7","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/CreatorOrTag/CreatorOrTag.jsx":"8","/Users/spartan/Documents/GitHub/teamzone-frontend/src/reducers/posts.js":"9","/Users/spartan/Documents/GitHub/teamzone-frontend/src/reducers/auth.js":"10","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/icon.js":"11","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/styles.js":"12","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/Input.js":"13","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Home/styles.js":"14","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Navbar/styles.js":"15","/Users/spartan/Documents/GitHub/teamzone-frontend/src/actions/posts.js":"16","/Users/spartan/Documents/GitHub/teamzone-frontend/src/actions/auth.js":"17","/Users/spartan/Documents/GitHub/teamzone-frontend/src/constants/actionTypes.js":"18","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/Posts.js":"19","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Form/Form.js":"20","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/PostDetails/styles.js":"21","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Pagination.jsx":"22","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/Post/Post.js":"23","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/PostDetails/CommentSection.jsx":"24","/Users/spartan/Documents/GitHub/teamzone-frontend/src/api/index.js":"25","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Form/styles.js":"26","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/styles.js":"27","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/styles.js":"28","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/Post/styles.js":"29"},{"size":463,"mtime":1669523005860,"results":"30","hashOfConfig":"31"},{"size":1126,"mtime":1669523005835,"results":"32","hashOfConfig":"31"},{"size":157,"mtime":1669523005860,"results":"33","hashOfConfig":"31"},{"size":4940,"mtime":1669946159658,"results":"34","hashOfConfig":"31"},{"size":3255,"mtime":1669876506681,"results":"35","hashOfConfig":"31"},{"size":2692,"mtime":1669876506681,"results":"36","hashOfConfig":"31"},{"size":3605,"mtime":1669876506682,"results":"37","hashOfConfig":"31"},{"size":1210,"mtime":1669523005856,"results":"38","hashOfConfig":"31"},{"size":1446,"mtime":1669523005860,"results":"39","hashOfConfig":"31"},{"size":610,"mtime":1669938996290,"results":"40","hashOfConfig":"31"},{"size":490,"mtime":1669523005856,"results":"41","hashOfConfig":"31"},{"size":647,"mtime":1669876506680,"results":"42","hashOfConfig":"31"},{"size":886,"mtime":1669523005855,"results":"43","hashOfConfig":"31"},{"size":460,"mtime":1669876506681,"results":"44","hashOfConfig":"31"},{"size":1455,"mtime":1669876506681,"results":"45","hashOfConfig":"31"},{"size":2696,"mtime":1669523005835,"results":"46","hashOfConfig":"31"},{"size":537,"mtime":1669523005835,"results":"47","hashOfConfig":"31"},{"size":487,"mtime":1669523005858,"results":"48","hashOfConfig":"31"},{"size":794,"mtime":1669523005857,"results":"49","hashOfConfig":"31"},{"size":3953,"mtime":1669876506680,"results":"50","hashOfConfig":"31"},{"size":955,"mtime":1669523005857,"results":"51","hashOfConfig":"31"},{"size":857,"mtime":1669523005857,"results":"52","hashOfConfig":"31"},{"size":4415,"mtime":1669876506682,"results":"53","hashOfConfig":"31"},{"size":1836,"mtime":1669876506682,"results":"54","hashOfConfig":"31"},{"size":1227,"mtime":1669876506679,"results":"55","hashOfConfig":"31"},{"size":509,"mtime":1669876506680,"results":"56","hashOfConfig":"31"},{"size":1229,"mtime":1669523005858,"results":"57","hashOfConfig":"31"},{"size":141,"mtime":1669523005858,"results":"58","hashOfConfig":"31"},{"size":1033,"mtime":1669876506682,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ublca0",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/spartan/Documents/GitHub/teamzone-frontend/src/index.js",[],["125","126"],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/App.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/reducers/index.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/Auth.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Home/Home.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Navbar/Navbar.js",["127"],"import React, { useState, useEffect } from \"react\";\nimport { AppBar, Typography, Toolbar, Avatar, Button } from \"@material-ui/core\";\nimport { Link, useHistory, useLocation, withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport decode from \"jwt-decode\";\n\nimport memoriesLogo from \"../../images/memoriesLogo.png\";\nimport memoriesText from \"../../images/teamzoneText.png\";\nimport * as actionType from \"../../constants/actionTypes\";\nimport useStyles from \"./styles\";\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push(\"/auth\");\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n    console.log(token);\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <Link to=\"/\" className={classes.brandContainer}>\n        <img\n          component={Link}\n          to=\"/\"\n          src={memoriesText}\n          alt=\"icon\"\n          height=\"45px\"\n        />\n        <img\n          className={classes.image}\n          src={memoriesLogo}\n          alt=\"icon\"\n          height=\"40px\"\n        />\n      </Link>\n      <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <div className={classes.profile}>\n            <Avatar\n              className={classes.green}\n              alt={user?.result.name}\n              src={user?.result.imageUrl}\n            >\n              {user?.result.name.charAt(0)}\n            </Avatar>\n            <Typography className={classes.userName} variant=\"h6\">\n              {user?.result.name}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className={classes.logout}\n              color=\"secondary\"\n              onClick={logout}\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Link to=\"/auth\" style={{ textDecoration: \"none\" }}>\n            <Button\n              component={Link}\n              to=\"/auth\"\n              variant=\"contained\"\n              className={classes.searchButton}\n              color=\"primary\"\n            >\n              Sign In\n            </Button>\n          </Link>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withRouter(Navbar);\n","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/PostDetails/PostDetails.jsx",["128","129","130"],"import React, { useEffect } from \"react\";\nimport {\n\tPaper,\n\tTypography,\n\tCircularProgress,\n\tDivider,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\n\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\nimport CommentSection from \"./CommentSection\";\nimport useStyles from \"./styles\";\n\nconst Post = () => {\n\tconst { post, posts, isLoading } = useSelector((state) => state.posts);\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst { id } = useParams();\n\n\tuseEffect(() => {\n\t\tdispatch(getPost(id));\n\t}, [id]);\n\n\tuseEffect(() => {\n\t\tif (post) {\n\t\t\tdispatch(\n\t\t\t\tgetPostsBySearch({ search: \"none\", tags: post?.tags.join(\",\") })\n\t\t\t);\n\t\t}\n\t}, [post]);\n\n\tif (!post) return null;\n\n\tconst openPost = (_id) => history.push(`/posts/${_id}`);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Paper elevation={6} className={classes.loadingPaper}>\n\t\t\t\t<CircularProgress size=\"7em\" />\n\t\t\t</Paper>\n\t\t);\n\t}\n\n\tconst recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n\treturn (\n\t\t<Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\n\t\t\t<div className={classes.card}>\n\t\t\t\t<div className={classes.section}>\n\t\t\t\t\t<Typography variant=\"h3\" component=\"h2\">\n\t\t\t\t\t\t{post.title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{post.tags.map((tag) => (\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={`/tags/${tag}`}\n\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"#3f51b5\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{` #${tag} `}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography gutterBottom variant=\"body1\" component=\"p\">\n\t\t\t\t\t\t{post.message}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\tCreated by:\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/creators/${post.name}`}\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"#3f51b5\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{` ${post.name}`}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t{moment(post.createdAt).fromNow()}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider style={{ margin: \"20px 0\" }} />\n\t\t\t\t\t\n\t\t\t\t\t<Divider style={{ margin: \"20px 0\" }} />\n\t\t\t\t\t<CommentSection post={post} />\n\t\t\t\t\t<Divider style={{ margin: \"20px 0\" }} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.imageSection}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tpost.selectedFile ||\n\t\t\t\t\t\t\t\"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={post.title}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{!!recommendedPosts.length && (\n\t\t\t\t<div className={classes.section}>\n\t\t\t\t\t<Typography gutterBottom variant=\"h5\">\n\t\t\t\t\t\tYou might also like:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<div className={classes.recommendedPosts}>\n\t\t\t\t\t\t{recommendedPosts.map(\n\t\t\t\t\t\t\t({ title, name, message, likes, selectedFile, _id }) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"20px\", cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => openPost(_id)}\n\t\t\t\t\t\t\t\t\tkey={_id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"subtitle2\">\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"subtitle2\">\n\t\t\t\t\t\t\t\t\t\t{message}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\tLikes: {likes.length}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<img src={selectedFile} width=\"200px\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Paper>\n\t);\n};\n\nexport default Post;\n","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/CreatorOrTag/CreatorOrTag.jsx",["131"],"import React, { useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { Typography, CircularProgress, Grid, Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Post from \"../Posts/Post/Post\";\nimport { getPostsByCreator, getPostsBySearch } from \"../../actions/posts\";\n\nconst CreatorOrTag = () => {\n\tconst { name } = useParams();\n\tconst dispatch = useDispatch();\n\tconst { posts, isLoading } = useSelector((state) => state.posts);\n\n\tconst location = useLocation();\n\n\tuseEffect(() => {\n\t\tif (location.pathname.startsWith(\"/tags\")) {\n\t\t\tdispatch(getPostsBySearch({ tags: name }));\n\t\t} else {\n\t\t\tdispatch(getPostsByCreator(name));\n\t\t}\n\t}, []);\n\n\tif (!posts?.length && !isLoading) return \"No posts\";\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h2\">{name}</Typography>\n\t\t\t<Divider style={{ margin: \"20px 0 50px 0\" }} />\n\t\t\t{isLoading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : (\n\t\t\t\t<Grid container alignItems=\"stretch\" spacing={3}>\n\t\t\t\t\t{posts?.map((post) => (\n\t\t\t\t\t\t<Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n\t\t\t\t\t\t\t<Post post={post} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default CreatorOrTag;\n","/Users/spartan/Documents/GitHub/teamzone-frontend/src/reducers/posts.js",["132","133"],"import {\n\tFETCH_ALL,\n\tFETCH_BY_SEARCH,\n\tFETCH_BY_CREATOR,\n\tFETCH_POST,\n\tCREATE,\n\tUPDATE,\n\tDELETE,\n\tLIKE,\n\tCOMMENT,\n} from \"../constants/actionTypes\";\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase \"START_LOADING\":\n\t\t\treturn { ...state, isLoading: true };\n\t\tcase \"END_LOADING\":\n\t\t\treturn { ...state, isLoading: false };\n\t\tcase FETCH_ALL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.payload.data,\n\t\t\t\tcurrentPage: action.payload.currentPage,\n\t\t\t\tnumberOfPages: action.payload.numberOfPages,\n\t\t\t};\n\t\tcase FETCH_BY_SEARCH:\n\t\tcase FETCH_BY_CREATOR:\n\t\t\treturn { ...state, posts: action.payload.data };\n\t\tcase FETCH_POST:\n\t\t\treturn { ...state, post: action.payload.post };\n\t\tcase LIKE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) =>\n\t\t\t\t\tpost._id === action.payload._id ? action.payload : post\n\t\t\t\t),\n\t\t\t};\n\t\tcase COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) => {\n\t\t\t\t\tif (post._id == +action.payload._id) {\n\t\t\t\t\t\treturn action.payload;\n\t\t\t\t\t}\n\t\t\t\t\treturn post;\n\t\t\t\t}),\n\t\t\t};\n\t\tcase CREATE:\n\t\t\treturn { ...state, posts: [...state.posts, action.payload] };\n\t\tcase UPDATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) =>\n\t\t\t\t\tpost._id === action.payload._id ? action.payload : post\n\t\t\t\t),\n\t\t\t};\n\t\tcase DELETE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter((post) => post._id !== action.payload),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","/Users/spartan/Documents/GitHub/teamzone-frontend/src/reducers/auth.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/icon.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/styles.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Auth/Input.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Home/styles.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Navbar/styles.js",["134"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport { green } from \"@material-ui/core/colors\";\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 0\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"10px 50px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  heading: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    fontSize: \"2em\",\n    fontWeight: 300,\n  },\n  image: {\n    marginLeft: \"10px\",\n    marginTop: \"5px\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    width: \"400px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"auto\",\n    },\n  },\n  profile: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"400px\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"auto\",\n      marginTop: 20,\n      justifyContent: \"center\",\n    },\n  },\n  logout: {\n    marginLeft: \"20px\",\n    backgroundColor: \"#EF9A53\",\n  },\n  userName: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  brandContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  green: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: \"green\",\n  },\n  searchButton: {\n    backgroundColor: \"green\",\n  },\n}));\n","/Users/spartan/Documents/GitHub/teamzone-frontend/src/actions/posts.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/actions/auth.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/constants/actionTypes.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/Posts.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Form/Form.js",["135"],"import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { useHistory } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: [],\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId\n      ? state.posts.posts.find((message) => message._id === currentId)\n      : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: \"\", message: \"\", tags: [], selectedFile: \"\" });\n  };\n\n  useEffect(() => {\n    if (!post?.title) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n    } else {\n      dispatch(\n        updatePost(currentId, { ...postData, name: user?.result?.name })\n      );\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create TeamZones.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  const handleAddChip = (tag) => {\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\n  };\n\n  const handleDeleteChip = (chipToDelete) => {\n    setPostData({\n      ...postData,\n      tags: postData.tags.filter((tag) => tag !== chipToDelete),\n    });\n  };\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post?.title}\"` : \"Creating a TeamZone\"}\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          rows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <div style={{ padding: \"5px 0\", width: \"94%\" }}>\n          <ChipInput\n            name=\"tags\"\n            variant=\"outlined\"\n            label=\"Tags\"\n            fullWidth\n            value={postData.tags}\n            onAdd={(chip) => handleAddChip(chip)}\n            onDelete={(chip) => handleDeleteChip(chip)}\n          />\n        </div>\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          className={classes.buttonClear}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/PostDetails/styles.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Pagination.jsx",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/Post/Post.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/PostDetails/CommentSection.jsx",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/api/index.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Form/styles.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/styles.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/styles.js",[],"/Users/spartan/Documents/GitHub/teamzone-frontend/src/components/Posts/Post/styles.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":37,"column":6,"nodeType":"142","endLine":37,"endColumn":16,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":25,"column":5,"nodeType":"142","endLine":25,"endColumn":9,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"144","line":33,"column":5,"nodeType":"142","endLine":33,"endColumn":11,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":129,"column":10,"nodeType":"149","endLine":129,"endColumn":50},{"ruleId":"140","severity":1,"message":"150","line":22,"column":5,"nodeType":"142","endLine":22,"endColumn":7,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":13,"column":1,"nodeType":"154","endLine":65,"endColumn":3},{"ruleId":"155","severity":1,"message":"156","line":42,"column":19,"nodeType":"157","messageId":"158","endLine":42,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":20},{"ruleId":"140","severity":1,"message":"163","line":36,"column":6,"nodeType":"142","endLine":36,"endColumn":12,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["168"],["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'location.pathname', and 'name'. Either include them or remove the dependency array.",["170"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'deepPurple' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch, id]",{"range":"184","text":"185"},"Update the dependencies array to be: [dispatch, post]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch, location.pathname, name]",{"range":"188","text":"189"},"Update the dependencies array to be: [clear, post]",{"range":"190","text":"191"},[1129,1139],"[location, logout, user?.token]",[692,696],"[dispatch, id]",[829,835],"[dispatch, post]",[719,721],"[dispatch, location.pathname, name]",[1096,1102],"[clear, post]"]