{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Documents/GitHub/cmpe272FinalProject/projfrontend/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: [],\n      selectedFile: ''\n    });\n  };\n\n  useEffect(() => {\n    if (!(post !== null && post !== void 0 && post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create Memories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : 'Creating a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px 0',\n          width: '94%'\n        },\n        children: /*#__PURE__*/_jsxDEV(ChipInput, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags\",\n          fullWidth: true,\n          value: postData.tags,\n          onAdd: chip => handleAddChip(chip),\n          onDelete: chip => handleDeleteChip(chip)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"FdZFM2j35lqG65u1X1/A1b5rOYg=\", false, function () {\n  return [useSelector, useDispatch, useStyles, useHistory];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/spartan/Documents/GitHub/cmpe272FinalProject/projfrontend/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","ChipInput","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","result","paper","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","root","form","target","value","padding","width","chip","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FileBase from 'react-file-base64'\nimport { useHistory } from 'react-router-dom'\nimport ChipInput from 'material-ui-chip-input'\n\nimport { createPost, updatePost } from '../../actions/posts'\nimport useStyles from './styles'\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: '',\n  })\n  const post = useSelector((state) =>\n    currentId\n      ? state.posts.posts.find((message) => message._id === currentId)\n      : null,\n  )\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const user = JSON.parse(localStorage.getItem('profile'))\n  const history = useHistory()\n\n  const clear = () => {\n    setCurrentId(0)\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' })\n  }\n\n  useEffect(() => {\n    if (!post?.title) clear()\n    if (post) setPostData(post)\n  }, [post])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history))\n      clear()\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }))\n      clear()\n    }\n  }\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create Memories.\n        </Typography>\n      </Paper>\n    )\n  }\n\n  const handleAddChip = (tag) => {\n    setPostData({ ...postData, tags: [...postData.tags, tag] })\n  }\n\n  const handleDeleteChip = (chipToDelete) => {\n    setPostData({\n      ...postData,\n      tags: postData.tags.filter((tag) => tag !== chipToDelete),\n    })\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post?.title}\"` : 'Creating a Memory'}\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          rows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <div style={{ padding: '5px 0', width: '94%' }}>\n          <ChipInput\n            name=\"tags\"\n            variant=\"outlined\"\n            label=\"Tags\"\n            fullWidth\n            value={postData.tags}\n            onAdd={(chip) => handleAddChip(chip)}\n            onDelete={(chip) => handleDeleteChip(chip)}\n          />\n        </div>\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}