{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Documents/GitHub/cmpe272FinalProject/projfrontend/src/components/PostDetails/CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\nimport { useDispatch } from \"react-redux\";\nimport { commentPost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment(\"\");\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentsInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"subtitle1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: c.split(\": \")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 8\n          }, this), c.split(\":\")[1]]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: commentsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Write a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Comment\",\n          multiline: true,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: \"10px\"\n          },\n          fullWidth: true,\n          disabled: !comment.length,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CommentSection, \"PnwudQ0bgumQPA5ceRebf1tWa8g=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/Users/spartan/Documents/GitHub/cmpe272FinalProject/projfrontend/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","handleComment","newComments","result","name","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\nimport { useDispatch } from \"react-redux\";\n\nimport { commentPost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst CommentSection = ({ post }) => {\n\tconst user = JSON.parse(localStorage.getItem(\"profile\"));\n\tconst [comment, setComment] = useState(\"\");\n\tconst dispatch = useDispatch();\n\tconst [comments, setComments] = useState(post?.comments);\n\tconst classes = useStyles();\n\tconst commentsRef = useRef();\n\n\tconst handleComment = async () => {\n\t\tconst newComments = await dispatch(\n\t\t\tcommentPost(`${user?.result?.name}: ${comment}`, post._id)\n\t\t);\n\n\t\tsetComment(\"\");\n\t\tsetComments(newComments);\n\n\t\tcommentsRef.current.scrollIntoView({ behavior: \"smooth\" });\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.commentsOuterContainer}>\n\t\t\t\t<div className={classes.commentsInnerContainer}>\n\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\t\t\tComments\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{comments?.map((c, i) => (\n\t\t\t\t\t\t<Typography key={i} gutterBottom variant=\"subtitle1\">\n\t\t\t\t\t\t\t<strong>{c.split(\": \")[0]}</strong>\n\t\t\t\t\t\t\t{c.split(\":\")[1]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t))}\n\t\t\t\t\t<div ref={commentsRef} />\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: \"70%\" }}>\n\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\t\t\tWrite a comment\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tlabel=\"Comment\"\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ marginTop: \"10px\" }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tdisabled={!comment.length}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={handleComment}\n\t\t\t\t\t>\n\t\t\t\t\t\tComment\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}