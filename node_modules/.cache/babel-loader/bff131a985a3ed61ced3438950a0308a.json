{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from \"../constants/actionTypes\";\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"START_LOADING\":\n      return { ...state,\n        isLoading: true\n      };\n\n    case \"END_LOADING\":\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n    case FETCH_BY_CREATOR:\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload.post\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id == +action.payload._id) {\n            return action.payload;\n          }\n\n          return post;\n        })\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/spartan/Documents/GitHub/cmpe272FinalProject/projfrontend/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_BY_CREATOR","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SACCA,SADD,EAECC,eAFD,EAGCC,gBAHD,EAICC,UAJD,EAKCC,MALD,EAMCC,MAND,EAOCC,MAPD,EAQCC,IARD,EASCC,OATD,QAUO,0BAVP;AAYA,gBAAe,YAAoD;AAAA,MAAnDC,KAAmD,uEAA3C;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAA2C;AAAA,MAAXC,MAAW;;AAClE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,eAAL;AACC,aAAO,EAAE,GAAGJ,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACD,SAAK,aAAL;AACC,aAAO,EAAE,GAAGD,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACD,SAAKV,SAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFhB;AAGNC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHtB;AAINC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJxB,OAAP;;AAMD,SAAKhB,eAAL;AACA,SAAKC,gBAAL;AACC,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC;AAAlC,OAAP;;AACD,SAAKZ,UAAL;AACC,aAAO,EAAE,GAAGM,KAAL;AAAYS,QAAAA,IAAI,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAAjC,OAAP;;AACD,SAAKX,IAAL;AACC,aAAO,EACN,GAAGE,KADG;AAENE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACtBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAD7C;AAFD,OAAP;;AAMD,SAAKV,OAAL;AACC,aAAO,EACN,GAAGC,KADG;AAENE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAU;AAChC,cAAIA,IAAI,CAACE,GAAL,IAAY,CAACR,MAAM,CAACE,OAAP,CAAeM,GAAhC,EAAqC;AACpC,mBAAOR,MAAM,CAACE,OAAd;AACA;;AACD,iBAAOI,IAAP;AACA,SALM;AAFD,OAAP;;AASD,SAAKd,MAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AACD,SAAKT,MAAL;AACC,aAAO,EACN,GAAGI,KADG;AAENE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACtBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAD7C;AAFD,OAAP;;AAMD,SAAKZ,MAAL;AACC,aAAO,EACN,GAAGG,KADG;AAENE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAFD,OAAP;;AAID;AACC,aAAOL,KAAP;AAjDF;AAmDA,CApDD","sourcesContent":["import {\n\tFETCH_ALL,\n\tFETCH_BY_SEARCH,\n\tFETCH_BY_CREATOR,\n\tFETCH_POST,\n\tCREATE,\n\tUPDATE,\n\tDELETE,\n\tLIKE,\n\tCOMMENT,\n} from \"../constants/actionTypes\";\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase \"START_LOADING\":\n\t\t\treturn { ...state, isLoading: true };\n\t\tcase \"END_LOADING\":\n\t\t\treturn { ...state, isLoading: false };\n\t\tcase FETCH_ALL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.payload.data,\n\t\t\t\tcurrentPage: action.payload.currentPage,\n\t\t\t\tnumberOfPages: action.payload.numberOfPages,\n\t\t\t};\n\t\tcase FETCH_BY_SEARCH:\n\t\tcase FETCH_BY_CREATOR:\n\t\t\treturn { ...state, posts: action.payload.data };\n\t\tcase FETCH_POST:\n\t\t\treturn { ...state, post: action.payload.post };\n\t\tcase LIKE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) =>\n\t\t\t\t\tpost._id === action.payload._id ? action.payload : post\n\t\t\t\t),\n\t\t\t};\n\t\tcase COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) => {\n\t\t\t\t\tif (post._id == +action.payload._id) {\n\t\t\t\t\t\treturn action.payload;\n\t\t\t\t\t}\n\t\t\t\t\treturn post;\n\t\t\t\t}),\n\t\t\t};\n\t\tcase CREATE:\n\t\t\treturn { ...state, posts: [...state.posts, action.payload] };\n\t\tcase UPDATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) =>\n\t\t\t\t\tpost._id === action.payload._id ? action.payload : post\n\t\t\t\t),\n\t\t\t};\n\t\tcase DELETE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter((post) => post._id !== action.payload),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}